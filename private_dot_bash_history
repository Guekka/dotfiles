git status
git reset .env.example
git checkout .env.example
ls
git status
git rebase --continue
git checkout feature/EG-7
git rebase dev
ls
git status
git add exactcure.png gui.ui result.ui 
ls
git status
git rm -r res
git add resources/
git status
git reset .env.example
git status
git restore .env.example
git restore --staged .env.example
git status
git rebase --continue
git push --force-with-lease
git checkout feature/EG-13
git rebase dev
git status
git add exactcure.png gui.ui result.ui 
git rm -r res
git restore --staged .env.example
git status
git add resources/ 
git status
git add data
git status
git rebase --continue
git status
git push --force-with-lease
git checkout merged_all_pr 
git rebase feature/EG-5
git rebase dev
git rebase --abort
git rebase dev
git status
git add exactcure.png gui.ui result.ui 
git rm -r res
git status
git rm data/.env.example 
git status
git add resources/
git status
git rebase --continue
git log
git rebase feature/EG-5
git status
git rebase --continue
git checkout feature/EG-13
git rebase dev
git checkout feature/EG-14
git rebase dev
git add exactcure.png gui.ui result.ui 
git status
git rm data/.env.example 
git status
git rm -r res 
git add resources/
git rm -r res 
git status
git restore --staged .env.example
git status
git add .env.example 
git status
git diff
git diff --staged
git rebase --continue
git push --force-with-lease
git add .env.example 
git commit --amend
git rebase -i HEAD~3
git rebase --abort
git rebase -i HEAD~3
git log
git push --force-with-lease
git checkout feature/EG-6
git push --force-with-lease
git checkout merged_all_pr 
git rebase feature/EG-5
git rebase feature/EG-6
git rebase feature/EG-7
git rebase --skip
git rebase --abort
git rebase feature/EG-13
git rebase --continue
git rebase feature/EG-14
git rebase --continue
git checkout feature/EG-7
git add excalibur_gui.spec src/
git commit -m "tmp"
git checkout feature/EG-7
git add src/simulation_result.py 
git commit --amend 
git push --force-with-lease
git rebase dev
git checkout dev
git pull
git checkout feature/EG-7
git rebase dev
git push --force-with-lease
for i in 1,2,3 do; echo i; done
for i in 1 2 3 do; echo i; done
for i in 1 2 3 do; echo $i; done
for i in 1 2 3; do echo $i; done
for i in 5 6 14; do git checkout feature/EG-$i && git rebase dev && git push --force-with-lease; done
git rebase --continue
for i in 5 6 14; do git checkout feature/EG-$i && git rebase dev && git push --force-with-lease; done
git log
git status
git add excalibur_gui.spec 
git commit --amend 
git push --force-with-lease
git checkout dev
git pull
git checkout feature/EG-5
git rebase dev
git rebase --continue
git push --force-with-lease
git checkout dev
git pull
git checkout feature/EG-6
for i in 6 7; do git checkout feature/EG-$i && git rebase dev && git push --force-with-lease; done
git status
git add src
git rebase --continue
git checkout dev
git pull
git checkout feature/EG-7
git rebase dev
git rebase --continue
git push --force-with-lease
pip install pylint==2.5.2
pip install pylint==2.4.4
pip install pylint
git status
git diff
clear
git diff
git log
git status
git checkout feature/EG-15
git checkout src/const.py src/covariate_window.py
rm src/covariate_window.py 
git checkout feature/EG-15
git checkout src/const.py
git checkout feature/EG-15
git log
git reset --soft 4416a2c73640711cc880aabc68d35a28dbc816ee
git status
git log
git add src/__init__.py 
git commit -m "EG-15 Add forgotten file"
git log
git reset --soft 4416a2c73640711cc880aabc68d35a28dbc816ee
git log
git add src/__init__.py 
git status
git reset .
git status
git add src/__init__.py 
git commit -m "EG-15 Add forgotten file"
git status
git rebase dev
git stash
git rebase dev
git rebase --abort
git rebase feature/EG-7
git add exactcure.png gui.ui result.ui 
git status
git rebase --abort
git stash pop
git log
git status
git diff
git status
git add src/const.py src/excalibur_gui.py res/covariate.ui src/covariate_window.py 
git commit -m "EG-15 Add basic window to display covariate"
git log
git checkout feature/EG-7
rm .env.example 
git checkout feature/EG-7
git rebase dev
git checkout feature/EG-15
git checkout -b bak/EG-15
git checkout feature/EG-7
git branch -D feature/EG-15
git checkout -b feature/EG-15
git log bak/EG-15
for i in 963f5a195dca75e005b7df9d8a686f5326bef90b a504a59373bc458155f7b22fd9228318882bab14 4416a2c73640711cc880aabc68d35a28dbc816ee 7b86d8028c8a2dd9a0c7d22e5ee0206d7f40951c db5fded76adee248881911b3d1993f85452646c1; do git cherry-pick $i; done
git status
git add resources/gui.ui 
git cherry-pick --continue 
git checkout feature/EG-7
git diff
git add src/result_window.py 
git commit -m "EG-7 Check all curves before opening window"
git rebase -i HEAD~2
git push
git checkout feature/EG-15
for i in 963f5a195dca75e005b7df9d8a686f5326bef90b a504a59373bc458155f7b22fd9228318882bab14 4416a2c73640711cc880aabc68d35a28dbc816ee 7b86d8028c8a2dd9a0c7d22e5ee0206d7f40951c db5fded76adee248881911b3d1993f85452646c1; do git cherry-pick $i; done
git checkout dev
git branch -d feature/EG-15
git cherry-pick --abort
git branch -d feature/EG-15
git checkout dev
git branch -d feature/EG-15
git branch -D feature/EG-15
git checkout feature/EG-7
git checkout -b feature/EG-15
for i in 963f5a195dca75e005b7df9d8a686f5326bef90b a504a59373bc458155f7b22fd9228318882bab14 4416a2c73640711cc880aabc68d35a28dbc816ee 7b86d8028c8a2dd9a0c7d22e5ee0206d7f40951c db5fded76adee248881911b3d1993f85452646c1; do git cherry-pick $i; done
git rebase --continue
git cherry-pick --continue
for i in 963f5a195dca75e005b7df9d8a686f5326bef90b a504a59373bc458155f7b22fd9228318882bab14 4416a2c73640711cc880aabc68d35a28dbc816ee 7b86d8028c8a2dd9a0c7d22e5ee0206d7f40951c db5fded76adee248881911b3d1993f85452646c1; do git cherry-pick $i; done
git cherry-pick --abort
git cherry-pick 963f5a195dca75e005b7df9d8a686f5326bef90b
git log
git cherry-pick --abort
git log
git log bak/EG-15 --oneline
git cherry-pick a504a59
git cherry-pick 4416a2c
git cherry-pick --continue
git cherry-pick 7b86d80
git cherry-pick db5fded
git status
git add resources/
git cherry-pick --continue
git log
git push
git push --set-upstream origin feature/EG-15
git push --set-upstream origin feature/EG-15 --force-with-lease
& c:/IT/ExactCure/excalibur_gui/.venv/Scripts/Activate.ps1
git pull
git checkout -b feature/EG-17
git gc --prune=now --aggressive
git gc --prune=now --aggressive
cd /mnt/c/IT/ExactCure/excalibur_gui/
git status
git add resources/ src/
git commit -m "EG-15 Locale and show experimental settings"
git push
git checkout feature/EG-7
git status
git checkout -b feature/EG-16
git checkout feature/EG-7
git log
git commit --amend
git push --force-with-lease
git checkout feature/EG-16
git checkout .
git checkout feature/EG-16
git stash
git rebase feature/EG-7
git stash pop
git push
git push --set-upstream origin feature/EG-16
git add src/result_window.py 
git commit --amend 
git push --force-with-lease
git checkout feature/EG-15
git checkout -b merge/all
git rebase feature/EG-16
git lopg
git log
git checkout feature/EG-15
git checkout -b merge/test
git merge feature/EG-16
git log
git merge
git merge --help
git reflog
git checkout 87b21a5
git merge feature/EG-16 --nocommit
git merge --help
git merge feature/EG-16 --no-commit
git log
git checkout merge/all
git log
git status
git log --numstat -1
git rerere
git rerere --help
git rerere status
git ll
git status
git checkout feature/EG-15
git add src/covariate_window.py 
git commit -m "EG-15 Display and sort by cov_key"
git push
git checkout merge/all
git config --global help.autocorrect 1
git stats
git rev-list --count
git config --global rerere.enabled true
git branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
git log --oneline dev
git checkout feature/EG-15
git add .env.example 
git commit --amend
git log
git rebase -i HEAD~10
git push --force-with-lease
git checkout feature/EG-7
git rebase -i HEAD~3
git push --force-with-lease
git checkout feature/EG-15
git checkout .
git checkout feature/EG-15
git pull
git pull origin/dev
git checkout dev
git pull
git checkout feature/EG-15
git rebase dev
git rebase --continue
git log
git push --force-with-lease
git checkout dev
git pull
git checkout feature/EG-16
git rebase dev
git rebase --continue
git log --oneline 
git push --force-with-lease
git checkout dev
sudo apt-get update && sudo apt upgrade
git status -sb
git status -
git status 
git config --global alias.st 'status -sb'
git last
git config --global alias.cm 'commit -m'
git cm
difftool
git difftool
git difftool --help
git config --global --list 
git add src/batch*
git commit -m "EG-17 Add posology parsing for batch"
git add src/batch*
git commit --amend
git config --global alias.cia 'commit --amend'
git add src/batch*
git cm "EG-17 Add patients parsing"
git add src/batch*
git cia
git cm "EG-17 Add mappings parsing"
git add src/batch*
git cm "EG-17 Merge tests"
git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
git log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short 
git config --global alias.ll 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat'
git config --global alias.ls 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate'
git config --global alias.filelog 'log -u'
git diff --word-diff
git add src/batch*
git cm "EG-17 Simplify administrations parsing. Fix last admin not included"
git diff HEAD
git filelog src/batch
git filelog src/batch.py
vim ~/dotfiles/gitconfig 
cat ~/.gitconfig     | sed 's/   +/\t/g'     | awk -F '\t' '$1 { current = $1; print current } $2 { print current "\t" $2}'     | sort     | awk -F '\t' '$1 && $2 { print $2 }'
awk '{ if ($1 ~ /^\[/) { section=$0; print $0 } else { printf section; print $0 } }' gitconfig | sort -t ']' -k1,1 | sed 's/\[.\+\]\([^\s]\+\)/\1/' 
cd ~/dotfiles/
awk '{ if ($1 ~ /^\[/) { section=$0; print $0 } else { printf section; print $0 } }' gitconfig | sort -t ']' -k1,1 | sed 's/\[.\+\]\([^\s]\+\)/\1/' 
vim ~/dotfiles/gitconfig 
cd /mnt/c/IT/ExactCure/excalibur_gui/
git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
git log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat 
vim ~/dotfiles/gitconfig 
git ll -1
git diff --cached HEAD^
vim ~/dotfiles/gitconfig 
vim ~/.bashrc 
source ~/.bashrc 
gitgit whatchanged
vim ~/dotfiles/gitconfig 
git upd
vim ~/dotfiles/gitconfig 
old=$(git rev-parse --abbrev-ref HEAD) && git checkout $@ && git pull
old=$(git rev-parse --abbrev-ref HEAD)
vim ~/dotfiles/gitconfig 
git upd
git checkout feature/EG-17
git stash
git upd
git st
git status
vim ~/dotfiles/gitconfig 
old=$(git rev-parse --abbrev-ref HEAD) && git checkout dev && git pull && git checkout $old && git rebase dev
git checkout feature/EG-17
old=$(git rev-parse --abbrev-ref HEAD) && git checkout dev && git pull && git checkout $old && git rebase dev
git status
git upd
git checkout dev && git pull && git checkout -  && git rebase dev
git checkout feature/EG-17
git checkout dev && git pull && git checkout -  && git rebase dev
vim ~/dotfiles/gitconfig 
git upd
git sp
vim ~/dotfiles/gitconfig 
git sp
git diff
git st
git checkout feature/EG-17
git checkout src/result_window.py
git diff
git cm "EG-17 >2 patients can be parsed and displayed from API result"
git cm "EG-17 Rename Batch to Settings and move it to its own file"
git checkout src/excalibur_gui.py
git cm "EG-17 Fix posology name not being stored"
git cm "EG-17 Add end_value parsing"
git add src/batch_test.py 
git cia
cd ..
git clone git@bitbucket.org:exactcure/excalibur_microservice.git
cd excalibur_microservice/
ls
pip install -r requirements.txt 
vim .bashrc
~
cd ~
vim .bashrc
source .bashrc
cd /mnt/c/IT/ExactCure/excalibur_gui/
exit
cd /mnt/c/IT/ExactCure/excalibur_gui/
cd /mnt/c/IT/ExactCure/excalibur_microservice/
pip3 install -r requirements.txt 
x86_64-linux-gnu-gcc
sudo apt install gcc
pip3 install -r requirements.txt 
cc1plus
sudo apt remove gcc
sudo apt autoremove
sudo apt install docker
docker
sudo apt install docker.io
cd /mnt/c/IT/ExactCure/excalibur_microservice/
docker-compose up -d --build
sudo apt install docker-compose
docker-compose up -d --build
docker
docker start
docker run
docker-compose up -d --build
sudo systemctl start docker
dockerd
sudo dockerd
sudo apt remove docker.io
sudo apt autoremove
git checkout devRD
git checkout RDdev 
cd /mnt/c/IT/ExactCure/excalibur_microservice/
cd /mnt/c/IT/ExactCure/excalibur_gui/
git assume api 
git cm "EG-17 Slightly improve plot display"
git checkout dezv
git checkout dev
git checkout -b feature/EG-18
git add excalibur_gui.spec 
git po
git checkout dev
git checkout -b fix/EG-19
git add src/model.py 
git cm "EG-19 Fix 'invalid model' error. The extension detected was performed after truncating filename"
git po
git checkout feature/EG-17
git push
git po
cd /mnt/c/IT/ExactCure/excalibur_gui/
git status 
git st
git diff origin
git checkout dev
git checkout feature/EG-17
git checkout feature/EG-18
git checkout feature/EG-19
git checkout fix/EG-1
git checkout fix/EG-19
file 66742053_ShadowOfWar.sav 
sudo apt-get install ripgrep
ripgrep "a"
rg
man rg
cd /mnt/
rg "318280157"
sudo rg "318280157"
man rg
rg "318280157" **/*.txt
rg "318280157" *.txt
man rg
rg "318280157" -g *.txt
exit
cd /mnt/c/IT/ExactCure/excalibur_gui/
git checkout -b feature/EG-21
git pull
git branch --set-upstream-to=origin/<branch> feature/EG-21
git branch --set-upstream-to=origin/feature/EG-21 feature/EG-21
git pull
git rebase -i HEAD~5
git rebase --abort
git checkout -b ci
git pull feature/EG-21:ci
git pull feature/EG-21
git pull origin feature/EG-21:ci
git pull origin feature/EG-21
git bD feature/EG-21
git la
git la | less
vim ~/.gitconfig 
git bD feature/EG-21
git checkout feature/EG-21
git rebase --abort
git status
git merge --abort
git status
git checkout feature/EG-21
git checkout dev
git pull
git checkout feature/EG-21
git rebase -i HEAD~50
git diff dev
git checkout feature/EG-21
git log
git reset --hard origin/dev
git ls
vim requirements.txt 
git add docs
git push
git push --force origin feature/EG-21
curl -s https://hub.docker.com/v2/repositories/library/alpine/tags |     jq '.results[] | select(.name=="latest") | .full_size'
sudo apt install jq
curl -s https://hub.docker.com/v2/repositories/library/alpine/tags | jq '.results[] | select(.name=="latest") | .full_size'
curl -s https://hub.docker.com/repository/docker/rkttu/python-nanoserver | jq '.results[] | select(.name=="latest") | .full_size'
curl -s https://hub.docker.com/repository/docker/rkttu/python-nanoserver 
curl -s https://hub.docker.com/v2/repositories/library/alpine/tags
curl -s https://hub.docker.com/repository/docker/rkttu/python-nanoserver/tags | jq '.results[] | select(.name=="latest") | .full_size'
curl -s https://hub.docker.com/repository/docker/rkttu/python-nanoserver/tags
curl -s https://hub.docker.com/v2/repositories/rkttu/python-nanoserver/tags | jq '.results[] | select(.name=="latest") | .full_size'
git push
git commit -m "EG-21 Attempt at CI pyinstaller"
git push
git st
git commit -m "EG-21 Attempt2 at CI pyinstaller"
git push
git commit -m "EG-21 Attempt3 at CI pyinstaller"
git push
git add bitbucket-pipelines.yml 
git commit -m "EG-21 Disable CI for pyinstaller"
git push
git rebase -i HEAD~10
git push
git push --force-with-lease
git pf
git checkout dev
cd /mnt/c/IT/ExactCure/excalibur_gui/
git ls
git st
git d
git la
git la | grep diff
git diff
git st
git add src/ 
git commit
git checkout -b feature/EG-22
git checkout dev
git ls
git la | grep reset
git rh origin/dev
git checkout feature/EG-20
git rebase -i origin/dev
git pf
git cia
git pf
git checkout feature/EG-22
git la | checkout -b
git la | grep checkout -b
git co -b feature/EG-23
git bd feature/EG-22
git ls
git cia
git po
git la | grep che
git upd
git rebase dev
git co feature/EG-23
git rebase dev
git st
git ls
git la| grep rebase
git rebase --abort
git rebase dev
git rebase --continue
git pf
git st
git co feature/EG-21
git p
git rh1
git pf
git cia
git pf
git la
https://levelup.gitconnected.com/useful-tricks-you-might-not-know-about-git-log-ed5ac32625ef
git log --all --after="yesterday"
git commit -m "doc"
git cia
git cm "Temp false test"
git add bitbucket-pipelines.yml 
git cm "Remove useless check"
git p
git rebase dev
git ls
git rebase -i feature/EG-20
git rebase dev
git pf
git rebase -i feature/EG-20
git pf
git add bitbucket-pipelines.yml 
git cia
git fp
git co feature/EG-23
git la 
git la | less
git bdm
git b
git br
git bd ci bak/EG-15 dev_v3 feature/EG-11 feature/EG-21 feature/EG-3 feature/EG-9 fix/EG-19 merge/all merge/test merged_all_pr 
git br
git upd
git ls
git st
git co f
git br
git co feature/EG-23
git rebase dev
git pf
git ls
git st
cd /mnt/c/IT/ExactCure/excalibur_gui/
git rebase -i dev
git log
git rebase -i dev
git log
git st
git checkout -b feature/EG-24
git rebase -i dev
git rebase --abort
git push
git po
git stash
git checkout dev
git checkout feature/EG-24
git stash pop
git st
git d
git diff
git add src/result_window.py 
git cm "EG-24 Update doc"
git co feature/EG-23
git st
git ls
git reset --hard origin/feature/EG-23
git ls
git co feature/EG-24 
git co feature/EG-23
git diff
git add src/simulation_result.py 
git cm "EG-23 Fix issue with PP model"
git p
git co feature/EG-24
git rebase feature/EG-23
git st
git diff
git add src/result_window.py 
git cm "EG-24 Fix unit check"
git co feature/EG-23
git add src/simulation_result.py 
git cia
git pf
git co feature/EG-24
git rebase feature/EG-23
git ls
git pf
cd /mnt/c/IT/ExactCure/excalibur_gui/
git add src/result_window.py 
git cia
git pf
cd /mnt/c/IT/Code_perso/
git clone 
git clone git@github.com:Ryan-rsm-McKenzie/bsa.git
git checkout -b common_interface
cd bsa
git checkout -b common_interface
vcpkg integrate install
cd /mnt/c/IT/Code_perso/bsa
rm src/.clang-format src/bsa/.clang-format 
\rm src/.clang-format src/bsa/.clang-format 
git remote add fork git@github.com:Guekka/bsa.git
git push -U fork
git push -u fork
git push
git diff --name-only common_interface $(git merge-base common_interface main)
git diff --name-only common_interface $(git merge-base common_interface master)
for f in git diff --name-only common_interface $(git merge-base common_interface master); do echo $f; done
for f in `git diff --name-only common_interface $(git merge-base common_interface master)`; do echo $f; done
for f in `git diff --name-only common_interface $(git merge-base common_interface master)`; do clang-format.exe -s file $f; done
clang-format.exe 
clang-format.exe  -i
clang-format.exe  -h
for f in `git diff --name-only common_interface $(git merge-base common_interface master)`; do clang-format.exe --style file $f; done
for f in `git diff --name-only common_interface $(git merge-base common_interface master)`; do clang-format.exe --style file -i $f; done
git diff --name-only common_interface $(git merge-base common_interface master)
for f in **/*.cpp **/*.hpp; do clang-format.exe --style file -i $f; done
git push
git checkout src/CMakeLists.txt
cd /mnt/c/IT/Code_perso/bsa
for f in **/*.cpp **/*.hpp; do clang-format.exe --style file -i $f; done
clang-format.exe --style file -i include/bsa/all.hpp 
for f in *.cpp **/*.hpp; do echo $f; done
ls -r *.cpp
find -name "*.cpp"
for f in `find -name "*.cpp" -name "*.hpp"; do clang-format.exe --style file -i $f; done
for f in `find -name "*.cpp" -name "*.hpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.cpp" -name "*.hpp"`; do echo $f; done
for f in `find -name "*.cpp"`; do echo $f; done
for f in `find -name "*.hpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.cpp"`; do clang-format.exe --style file -i $f; done
git push
for f in `find -name "*.cpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.hpp"`; do clang-format.exe --style file -i $f; done
git push
git pull
git st
git status
git add tests/CMakeLists.txt 
git rebase --continue 
git status
git add tests/all.test.cpp 
git add tests/CMakeLists.txt tests/src/
git status
git rebase --continue 
git push
git op
git p
git pull
for f in `find -name "*.cpp"`; do clang-format.exe --style file -i $f; done
git push
fortune
vcpkg.exe install bsa
vcpkg.exe install 
.cd ..
cd ..
vcpkg.exe install bsa
vcpkg.exe install zlib
vcpkg.exe install lz3
vcpkg.exe install lz4
vcpkg.exe install bsa
vcpkg.exe uninstall bsa
vcpkg.exe remove bsa
vcpkg.exe install bsa
vcpkg.exe remove bsa
vcpkg.exe install bsa
vcpkg.exe remove bsa
vcpkg.exe install bsa
vcpkg.exe remove bsa
\rm /mnt/c/Users/Edgar/AppData/Local/vcpkg/archives/a9/a93aba5a21eccb98faa369287d109b83a6f9a12034b4c54bbd473069f8f0924e.zip 
vcpkg.exe install bsa
cd /mnt/c/IT/Code_perso/bsa
git pull
git stash
git pull
git sp
git stash
vcpkg.exe remove bsa
cd ..
vcpkg.exe remove bsa
vcpkg.exe install bsa --no-binarycaching
cd bsa
git add vcpkg
vcpkg.exe remove bsa
cd ..
vcpkg.exe remove bsa 
vcpkg.exe install bsa --no-binarycaching
git tag 2.0.3
cd bsa$
cd bsa
cd bsa$
git tag 2.0.3
git push fork
git tag remove 2.0.3
git st
git add CMakeLists.txt
git commit -m "tag 2.0.3"
git tag 2.0.3
git tag
git tag --remove 2.0.3
git tag --d 2.0.3
git tag 2.0.3
git push --all
git push fork --all
git push fork --tags
git push -d remove
git push fork -d remove
git commit -m "tmp
"
git la
git rebase HEAD~10 -i
git stash
git rebase HEAD~10 -i
git ls
git st
git status
git st
git lg
git add src/CMakeLists.txt 
git commit -m "tmp
"
git rebase HEAD~10 -i
git p
git p fork
git pf fork
git push -d 2.0.3
git push fork -d 2.0.3
git tag -d 2.0.3
git tag 2.0.3
git push --tags
git push fork --tags
git sp
git add vcpkg
git p fork
git rebase HEAD~10 -i
git st
git stash
git rebase HEAD~10 -i
git ls
git st
git add vcpkg
git rb
git rebase --continue
git ls
git log
git fp
git fp fork
git p fork
git p
git p fork
git pf fork
git rebase HEAD~10 -i
git pf fork
got lg
git lg
git co 966e825b5140b6533243e888fc21e78215ad34d3
git co master
git co src
git co master
git rebase HEAD~10 -i
git add src
git rebase --continue
git co 966e825b5140b6533243e888fc21e78215ad34d3
git stash
git co 966e825b5140b6533243e888fc21e78215ad34d3
git co master
git d
git diff
git cm "Restore original path"
git p fork
git pf fork
git ls
git st
git add src/CMakeLists.txt vcpkg
git cm "Restore original path"
git pf fork
rm src/CMakeLists.txt.orig 
git add src/CMakeLists.txt 
git cia
git pf fork
git add src/CMakeLists.txt.orig
git cia
git pf fork
git pull
git pull fork
git pull fork master
git rebase HEAD~10 -i
git pf fork
cd /mnt/c/IT/Code_perso/bsa
git pull fork
git pull fork master
git add vcpkg
git commit -m "Apply code review suggestions"
git p fork
git pull fork master
git rebase HEAD~10 -i
git pf fork
git pull fork master
cd /mnt/c/IT/vcpkg/
git pull
vcpkg x-add-version bsa
vcpkg.exe x-add-version bsa
vcpkg format-manifest --all
vcpkg.exe format-manifest --all
git ls
git add ports/bsa
git cm "[bsa] new port"
vcpkg.exe x-add-version bsa
ls versions/bsa
cat versions/b-/bsa.json 
git add versions/b
git add versions/b-
git st
git add versions/b-/bsa.json
git st
git cm "[bsa] Update version file"
git remote add fork git@github.com:Guekka/vcpkg.git
git p fork master
vim scripts/ci.baseline.txt 
git add scripts/ci.baseline.txt 
git cm "[bsa] Update ci baseline"
git p fork master
vcpkg.exe x-add-version bsa
git diff versions
git add versions
git commit -m "[bsa] Update version database"
git p fork master
cd /mnt/c/IT/Code_perso/bsa

git diff --ignore-space-at-eol | out-file -enc ascii /mnt/c/IT/vcpkg/ports/bsa/reduce-minimum-cmake.patch
git diff --ignore-space-at-eol > /mnt/c/IT/vcpkg/ports/bsa/reduce-minimum-cmake.patch
cd /mnt/c/IT/vcpkg/
git add ports/bsa
git st
git cm "[bsa] Add patch for minimum cmake version"
git p fork master
vim scripts/ci.baseline.txt 
git add scripts/ci.baseline.txt 
git cm "[bsa] Update ci baseline"
vcpkg.exe x-add-version bsa
vcpkg.exe x-add-version bsa --overwrite-version
vcpkg.exe x-add-version bsa
git add versions
git cm "Update version database"
git p fork master
ls -r
ls -R
ls -R include/*.cpp
git checkout common_interface
git add .
git push -u origin master
git push -u origin main
git branch main
git branch -d master
git checkout -b main
git checkout main
git branch -d master
git push -u origin main
git pf -u origin main
git push --force -u origin main
git add ports
git cm "Update ports"
git p
mkdir /mnt/c/IT/Code_perso/build/bsa/dev
cd  /mnt/c/IT/Code_perso/build/bsa/dev
cmake.exe --preset=dev 
cmake.exe --preset=dev /mnt/c/IT/Code_perso/bethutil/bsa
cmake.exe --preset=dev /mnt/c/IT/Code_perso/bethutil/bsa/CMakePresets.json 
cmake.exe --preset=dev "C:/IT/Code_perso/bethutil/bsa/CMakePresets.json"
cd  /mnt/c/IT/Code_perso/bethutil/bsa/
cmake --preset=dev
cmake.exe --preset=dev
cmake --build build/dev --config Release -j 12
cmake.exe --build build/dev --config Release -j 12
cmake --install build/dev --config Release --prefix prefix
cmake.exe --install build/dev --config Release --prefix prefix
cd ../..
cmake --preset=ci
cmake.exe --preset=ci
cmake.exe --preset=ci-windows
cmake.exe --preset=dev-coverage
cmake.exe --preset=dev
git push
git pull
git push
git p
git ls
git rebase -i fbec757
git pf
cmake --preset=dev
cmake.exe --preset=dev
cd /mnt/c/IT/Code_perso/bsa
git pull
git st
git diff
git co CMakeLists.txt
git pull
cd ../bethutil/bsaa
vcpkg.exe
vcpkg.exe install
cd /mnt/c/IT/Code_perso/
git clone git@github.com:Ryan-rsm-McKenzie/bsa.git
cd bethutil/bsa
for f in `find -name "*.cpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.hpp"`; do clang-format.exe --style file -i $f; done
git add source include
cd /mnt/c/IT/vcpkg/
vcpkg.exe x-add-version bsa --overwrite-version
git diff
git diff versions
git st
vcpkg.exe x-add-version bsa 
git pull
git pull fork master
vcpkg.exe x-add-version bsa --overwrite-version
git diff
git add versions
git cm "Update versions database"
git pf fork master
git rebase -i HEAD~10
git pf fork master
cd /mnt/c/IT/Code_perso/bethutil/bsa
for f in `find -name "*.hpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.cpp"`; do clang-format.exe --style file -i $f; done
for f in `find -name "*.hpp"`; do clang-format.exe --style file -i $f; done
clang-format.exe --style file --dump-config 
cd /mnt/c/IT/Code_perso/bethutil
cmake-init.exe common
cd common/
cd ..
\rm -rf common
cmake-init.exe template
mkdir build
cd build
cmake.exe --preset=dev ../bsa
git submodule init 
git init
cd external/
git submodule add https://github.com/Ryan-rsm-McKenzie/m.css/tree/ae6f9b06986b721f13177774769f26460ebc44ea
git submodule add https://github.com/Ryan-rsm-McKenzie/m.css
\rm m.css/
\rm -rf m.css/
git submodule add https://github.com/Ryan-rsm-McKenzie/m.css
ls
cd /mnt/c/IT/Code_perso/bethutil
cd external
cd template
grep -r 'template' --exclude-dir external
grep --help
grep -r 'template' --exclude-dir external
grep -r 'template' --exclude-dir external -i
cd /mnt/c/IT/vcpkg/
git pull fork master
cd /mnt/c/IT/vcpkg/
vcpkg.exe format-manifest --all
git st
git add ports/bsa
vcpkg.exe x-add-version bsa --overwrite-version
git st
git cm "[bsa] Add warning instead of fail on Linux"
git p fork master
vcpkg.exe x-add-version bsa --overwrite-version
git st
git add versions
git cm "Update versions database"
git p fork master
vim versions/b-/bsa.json 
git p fork master
exit
ls -R .
ls -lR . 
ls -lR . | cut -d1
ls -lR . | cut -c1
ls -lR . | cut -d' '1
ls -lR . | cut -d' ' 1
ls -lR . | cut -d' '
ls -lR . | cut -d -f4
ls -lR . | cut -d" " -f4
ls -lR . | cut -d" " -f6
ls -lR . | cut -d" " -f8
ls -lR . | cut -d" " -f10
ls
ls -R1a
ls -R1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               cd /mnt/c/IT/Code_perso/bethutil
cd common/
git p
git st
git status
cd ../newcommon/
git p
git p origin main
git remote
ping 8.8.8.8
cd /mnt/c/IT/Code_perso/bethutil
cd newcommon/
git p
cd ../newbsa/
git p
cd ../template/
git add .
git cm "Improvements
git cm "Improvements"
git p
cd /mnt/c/IT/Code_perso/bethutil
git pull newcommon/
( cd newcommon/ && git pull)
( cd newbsa/ && git pull)
( cd template/ && git pull)
(whoami)
$(whoami)
sudo apt-get cache
sudo apt-get list
sudo apt cache
sudo apt-get search
sudo apt-cache search edgar
sudo apt install edgar
edgar
sudo apt-get remove edgar
sudo apt-get autoremove
exitr
for x in newcommon newbsa template do; (echo $x); done
for x in newcommon newbsa template do; $(echo $x); done
for x in newcommon newbsa template; do (echo $x); done
for x in newcommon newbsa template; do (cd $x && git pull); done
for x in newcommon newbsa template; do (cd $x && git push); done
bsarch.exe Requiem.
bsarch.exe Requiem.bsa
cd /mnt/c/IT/Code_perso/bethutil
cd newbsa/
git checkout vcpkg.json src/detail/archive.cpp  src/CMakeLists.txt include/btu/bsa/detail/archive.hpp examples/CMakeLists.txt
git push
git pull
git diff
git checkout .
git push
git pull
git push
sudo apt-get install chezmoi
cd ~/Downloads/
wget https://github.com/twpayne/chezmoi/releases/download/v2.1.6/chezmoi_2.1.6_linux_amd64.deb
sudo dpkg -i chezmoi_2.1.6_linux_amd64.deb 
chezmoi 
vcpkg.exe install bethutil-bsa
cd /mnt/c/IT/Code_perso/CAO5/
cd src/
vcpkg.exe install
git log
cd /mnt/c/IT/Code_perso/bethutil/newbsa/
git p
git pull
git diff
git checkout CMakeLists.txt
git pull
git diff
git checkout src/CMakeLists.txt
git pull
git push
cd /mnt/c/IT/Code_perso/CAO5/src/
cd /mnt/c/IT/Code_perso/bethutil/newbsa/
git stash && git pull && git stash pop
git ls
git rh1
bsarch.exe MihailMonstersMerged - textures/
bsarch.exe MihailMonstersMerged - textures.bsa
bsarch.exe "MihailMonstersMerged - textures.bsa"
chezmoi doctor
git add .
git commit -m "Initial commit"
git remote add origin git@github.com:Guekka/dotfiles./git
git remote add origin git@github.com:Guekka/dotfiles.git
git remote set-url origin git@github.com:Guekka/dotfiles.git
git branch -M main
git po
exit
ls
exit
ls
ls symlink_dot_vim 
exit
ls
rm symlink_dot_vim
exit
rm dot_ssh 
exit
cd ~
vim dotfiles/install.sh 
mkdir .local/share/chezmoi/dot_ssh/
ls
rm symlink_dot_vim 
exit
ls
rm symlink_dot_*
exit
