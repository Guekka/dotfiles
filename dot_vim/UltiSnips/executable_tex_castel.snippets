global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
endglobal

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

priority 100
snippet ... "ldots" iA
\ldots
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{NiceTabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{NiceTabular}
\end{table}
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet desc "Description" b
\begin{description}
	\item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[${1:options}]{${2:package}}$0
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

context "math()"
snippet if& "iff" Ai
\iff& $1 \\\\ $0
endsnippet

context "math()"
snippet scr "Math cursive" A
\mathscr{$1}$0
endsnippet


context "math()"
snippet mbb "Math bb" iA
\mathbb{$1}$0
endsnippet


snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
	${1:${VISUAL}}
.\]$0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}$0
endsnippet

context "math()"
snippet 'inval([of])([of])' "Intervalles" iAr
\\intervalle`!p snip.rv = match.group(1) + match.group(2)`{$1}{$2}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet ^^ "auto superscript" iA
^{$1}$0
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

snippet == "equals" iA
&= $1 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

snippet sum "sum" w
\sum_{k=${1:0}}^{${2:n}} $0
endsnippet

snippet taylor "taylor" w
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:+\infty}} 
endsnippet

snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet <= "leq" iA
\le 
endsnippet

snippet >= "geq" iA
\ge 
endsnippet

context "math()"
snippet EE "geq" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xnn "xn" iA
x_{n}
endsnippet

context "math()"
snippet ynn "yn" iA
y_{n}
endsnippet

context "math()"
snippet xii "xi" iA
x_{i}
endsnippet

context "math()"
snippet yii "yi" iA
y_{i}
endsnippet

context "math()"
snippet xjj "xj" iA
x_{j}
endsnippet

context "math()"
snippet yjj "yj" iA
y_{j}
endsnippet

context "math()"
snippet xp1 "x" iA
x_{n+1}
endsnippet

context "math()"
snippet xmm "x" iA
x_{m}
endsnippet

snippet R0+ "R0+" iA
\\mathbb{R}_0^+
endsnippet

snippet plot "Plot" w
\begin{figure}[H]
	\centering
	\begin{tikzpicture}
		\begin{axis}[
			domain=${1:-10}:${2:10},
			axis lines = middle,
			axis equal image,
			width=14cm,
			enlargelimits={abs=0.4},
			no markers,
			samples=200
		]
			\addplot[domain=$1:$2]{$4};
		\end{axis}
	\end{tikzpicture}
	\caption{$5}
	\label{${6:$5}}
\end{figure}
endsnippet

snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

priority 100
snippet *** "cdot" iA
\cdot 
endsnippet

priority 100
context "math()"
snippet '(^|[^\\a])(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
`!p snip.rv = match.group(1) + '\\' + match.group(2)`($1)$0
endsnippet

#priority 100
#context "math()"
#snippet ' (sh|ch|th)' "sin/cos/hyper" rwA
#\\`!p snip.rv = match.group(1)`($1)$0
#endsnippet

#priority 200
#context "math()"
#snippet '(?<!\\)a(sh|ch|th)' "ln" rwA
#\\arg`!p snip.rv = match.group(1)`($1)$0
#endsnippet

priority 100
context "math()"
snippet ' dch(.)' "sin/cos/hyper" rA
\frac{e^{`!p snip.rv = match.group(1)`} + e^{-`!p snip.rv = match.group(1)`}}{2}
endsnippet

priority 100
context "math()"
snippet ' dsh(.)' "sin/cos/hyper" rA
\frac{e^{`!p snip.rv = match.group(1)`} - e^{-`!p snip.rv = match.group(1)`}}{2}
endsnippet

priority 100
context "math()"
snippet ' dth(.)' "sin/cos/hyper" rA
\frac{e^{`!p snip.rv = match.group(1)`} - e^{-`!p snip.rv = match.group(1)`}}{e^{`!p snip.rv = match.group(1)`} + e^{-`!p snip.rv = match.group(1)`}}
endsnippet

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

priority 200
context "math()"
snippet '(^|[^\\])a(sin|cos|tan|cot|csc|sec)' "ln" rwA
`!p snip.rv = match.group(1) + '\\arc' + match.group(2)`($1)$0
endsnippet


priority 200
context "math()"
snippet '(?<!\\)(pi|zeta|int)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

priority 0
context "math()"
snippet !> "mapsto" iA
\longmapsto 
endsnippet

context "math()"
snippet invs "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\undersim{ $1 } $0
endsnippet

context "math()"
snippet set "set" wA
\set{ $1 } $0
endsnippet

snippet || "mid" iA
 \mid 
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

snippet NN "n" iA
\N
endsnippet

snippet CC "n" iA
\C
endsnippet

snippet KK "n" iA
\K
endsnippet

snippet MM "n" iA
\M_{n\;p}(\mathbb{K})
endsnippet

snippet Nn "cap" iA
\cap 
endsnippet

snippet UU "cup" iA
\cup 
endsnippet

snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

snippet OO "emptyset" iA
\emptyset
endsnippet

snippet RR "real" iA
\R
endsnippet

snippet QQ "Q" iA
\Q
endsnippet

snippet ZZ "Z" iA
\Z
endsnippet

snippet <! "normal" iA
\triangleleft 
endsnippet

snippet <> "hokje" iA
\diamond 
endsnippet


context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tt "text" iA
\text{$1}$0
endsnippet

priority 10
context "math()"
snippet itt "intertext" iA
\shortintertext{$1}$0
endsnippet

context "math()"
snippet case "cases" w
\begin{cases}
	$1
\end{cases}
endsnippet

snippet SI "SI" iA
\SI{$1}{$2}
endsnippet

snippet bigfun "Big function" iA
\begin{align*}
	$1: $2 &\longrightarrow $3 \\\\
	$4 &\longmapsto $5 
.\end{align*}
$0
endsnippet

snippet compfun "Composed function" iA
\begin{table}[htpb]
	\begin{NiceTabular}{ccccc}
		$$1$ & $\frightarrow{ ${2: }}$ & $$3$ & $\frightarrow{ ${4: }}$ & $$5$ \\\\
		$${6:x}$ & $\longmapsto$ & $$7$ & $\longmapsto$ & $$8$ 
	\end{NiceTabular}
\end{table}$0
endsnippet

snippet inlfun "Inline function" iA
$$1: $2 \longmapsto $3$ $0
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

priority 10
context "math()"
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet HH "H" iA
\mathbb{H}
endsnippet

snippet DD "D" iA
\mathbb{D}
endsnippet

context "math()"
snippet <-- "gets" A
\gets
endsnippet

context "math()"
snippet '(^|[^\\])([tT]heta|[bB]eta|[aA]lpha|[dD]elta|[eE]psilon|[lL]ambda)'  "greek" iAr
`!p snip.rv = match.group(1) + '\\' + match.group(2)`
endsnippet

snippet tabvar "Variations table init" bA
\\begin{tikzpicture}
	\\tkzTabInit{$x$ / 1, $f'(x)$ / 1, $f$ / 1.5}{$-\\infty$, \$0$,	$+\\infty$}
	\\tkzTabLine{,+,z,+,}
	\\tkzTabVar{-/ $-\\infty$,+/1,-/ $-\\infty$,}
\\end{tikzpicture}
endsnippet

snippet rbrace "right brace" bA
\left.
\begin{NiceMatrix}
	${1:${VISUAL}}
\end{NiceMatrix}
\right\\}$0
endsnippet

snippet lbrace "left brace" bA
\left\\{
\begin{NiceMatrix}
	${1:${VISUAL}}
\end{NiceMatrix}
\right.$0
endsnippet

snippet ubrace "under brace" i
\underbrace{${1:${VISUAL}}}_{$2}
endsnippet

snippet obrace "over brace" i
\overbrace{${1:${VISUAL}}}^{$2}
endsnippet

context "math()"
snippet rond "\circ" A
\circ 
endsnippet

context "math()"
snippet abs "\abs" A
\abs{$1}$0
endsnippet

context "math()"
snippet tinyo "petit o" A
\tinyo{${1:0}}( $2 ) $0
endsnippet

snippet ( "parenthesis" iA
( $1 )$0
endsnippet

snippet { "bracket" iA
{ $1 }$0
endsnippet

context "math()"
snippet '=(\d+)=' "Number under equal" Ar
\underequal{`!p snip.rv = match.group(1)`}
endsnippet

# vim:ft=snippets
